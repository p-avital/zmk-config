/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

&led_strip {
    // chain-length = <6>;
    // chain-length = <35>; // Uncomment if using both per-key and underglow LEDs

    chain-length = <29>; // Uncomment if using only per-key LEDs.
};

&lt {
    tapping-term-ms = <180>;
    flavor = "balanced";
};

&mt {
    tapping-term-ms = <180>;
    flavor = "balanced";
};

&sensors { triggers-per-rotation = <72>; };

/ {
    macros {
        deref: deref {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "DEREF";
        };

        double_arrow: double_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "DOUBLE_ARROW";
        };

        angle_surround: angle_surround {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp GT &kp LEFT>;
            label = "ANGLE_SURROUND";
        };

        mu: mu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(RS(N8))>;
            label = "MU";
        };
    };

    combos {
        compatible = "zmk,combos";

        delete {
            bindings = <&kp DEL>;
            key-positions = <10 11>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <34 35>;
        };

        caps_lock {
            bindings = <&kp CAPS>;
            key-positions = <36 24>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <22 23>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE  &kp N1   &kp N2       &kp N3          &kp N4       &kp N5                                                   &kp N6           &kp N7       &kp N8      &kp N9       &kp N0           &kp MINUS
&kp TAB    &kp Q    &kp W        &kp E           &kp R        &kp T                                                    &kp Y            &kp U        &kp I       &kp O        &kp P            &kp LEFT_BRACKET
&kp ESC    &lt 3 A  &mt LCTRL S  &mt LEFT_ALT D  &mt LSHFT F  &kp G                                                    &kp H            &mt RSHFT J  &mt RALT K  &mt LCTRL L  &lt 3 SEMICOLON  &lt 3 SQT
&kp LSHFT  &kp Z    &kp X        &kp C           &kp V        &kp B      &to 5                   &to 1                 &kp N            &kp M        &kp COMMA   &kp DOT      &kp FSLH         &mt LEFT_SHIFT EQUAL
                    &kp LCTRL    &kp LALT        &kp LGUI     &lt 4 DEL  &mt LEFT_SHIFT SPACE    &mt LEFT_SHIFT SPACE  &lt 4 BACKSPACE  &kp BSPC     &kp RALT    &kp RCTRL
            >;

            sensor-bindings =
                <&inc_dec_kp UP_ARROW DOWN_ARROW>,
                <&inc_dec_kp LEFT_ARROW RIGHT_ARROW>;
        };

        mac {
            bindings = <
&kp GRAVE      &kp N1   &kp N2           &kp N3          &kp N4       &kp N5                                                      &kp N6           &kp N7       &kp N8      &kp N9           &kp N0               &kp MINUS
&kp TAB        &kp Q    &kp W            &kp E           &kp R        &kp T                                                       &kp Y            &kp U        &kp I       &kp O            &kp P                &kp LEFT_BRACKET
&mt LCTRL ESC  &lt 2 A  &mt LEFT_META S  &mt LEFT_ALT D  &mt LSHFT F  &kp G                                                       &kp H            &mt RSHFT J  &mt RALT K  &mt LEFT_META L  &mt LCTRL SEMICOLON  &lt 2 SQT
&kp LSHFT      &kp Z    &kp X            &kp C           &kp V        &kp B         &to 5                   &to 0                 &kp N            &kp M        &kp COMMA   &kp DOT          &kp FSLH             &kp EQUAL
                        &kp LCTRL        &kp LALT        &kp LGUI     &lt 4 DELETE  &mt LEFT_SHIFT SPACE    &mt LEFT_SHIFT SPACE  &lt 4 BACKSPACE  &kp BSPC     &kp RGUI    &kp RALT
            >;

            sensor-bindings =
                <&inc_dec_kp UP_ARROW DOWN>,
                <&inc_dec_kp LEFT_ARROW RIGHT>;
        };

        mac_arrows {
            bindings = <
&kp F1   &kp F2     &kp F3     &kp F4      &kp F5     &kp F6                             &kp F7         &kp F8    &kp F9           &kp F10              &kp F11        &kp F12
&kp ESC  &kp HOME   &kp UP     &kp ESCAPE  &kp BSPC   &kp DEL                            &kp PAGE_UP    &kp HOME  &kp UP_ARROW     &kp END              &kp BACKSPACE  &kp DEL
&kp TAB  &trans     &trans     &trans      &trans     &kp F6                             &kp TAB        &kp LEFT  &kp DOWN         &kp RIGHT_ARROW      &kp ENTER      &trans
&kp F7   &kp LG(Z)  &kp LG(X)  &kp LG(C)   &kp LG(V)  &kp F12    &trans       &trans     &kp PAGE_DOWN  &deref    &angle_surround  &double_arrow        &kp F2         &kp BSLH
                    &trans     &trans      &trans     &kp MINUS  &kp UNDER    &kp UNDER  &trans         &trans    &trans           &kp LA(LG(K_EJECT))
            >;

            sensor-bindings =
                <&inc_dec_kp LG(Z) LS(LG(Z))>,
                <&inc_dec_kp LG(Z) LG(LS(Z))>;
        };

        arrows {
            bindings = <
&kp F1  &kp F2     &kp F3     &kp F4     &kp F5     &kp F6                                     &kp F7         &kp F8    &kp F9           &kp F10          &kp F11        &kp F12
&trans  &trans     &trans     &trans     &trans     &trans                                     &kp PAGE_UP    &kp HOME  &kp UP_ARROW     &kp END          &kp BACKSPACE  &kp DEL
&trans  &trans     &trans     &trans     &trans     &kp ENTER                                  &kp TAB        &kp LEFT  &kp DOWN         &kp RIGHT_ARROW  &kp ENTER      &trans
&kp F7  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp F12    &trans           &trans         &kp PAGE_DOWN  &deref    &angle_surround  &double_arrow    &kp F2         &kp BSLH
                   &trans     &trans     &trans     &kp MINUS  &kp LS(UNDER)    &kp LS(UNDER)  &kp BACKSPACE  &trans    &trans           &trans
            >;

            sensor-bindings =
                <&inc_dec_kp LC(Z) LC(LS(Z))>,
                <&inc_dec_kp LC(Z) LC(LS(Z))>;
        };

        symbols {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3       &bt BT_SEL 4                                     &trans     &trans                     &kp PRINTSCREEN  &trans                      &trans         &kp K_POWER
&kp F1      &kp N1            &kp N2        &kp N3            &kp N4             &kp N5                                           &kp N6     &kp N7                     &kp N8           &kp N9                      &kp N0         &kp RBKT
&kp GRAVE   &kp EXCL          &mt LCTRL AT  &mt LALT HASH     &kp DOLLAR         &kp PRCNT                                        &kp CARET  &mt RIGHT_SHIFT AMPERSAND  &mt RALT ASTRK   &mt RCTRL LEFT_PARENTHESIS  &kp RPAR       &kp TILDE
&trans      &ext_power EP_ON  &kp SLASH     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp EQUAL     &kp K_MUTE       &kp C_PLAY_PAUSE  &mu        &deref                     &kp LS(LBRC)     &kp LS(RBRC)                &kp BACKSLASH  &kp PIPE
                              &trans        &trans            &trans             &kp MINUS     &kp LS(UNDER)    &kp LS(UNDER)     &kp MINUS  &trans                     &trans           &kp K_SLEEP
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp C_PREVIOUS C_NEXT>;
        };

        gaming {
            bindings = <
&kp ESC    &kp N1  &kp N2     &kp N3    &kp N4    &kp N5                                        &kp N6           &kp N7    &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q   &kp W      &kp E     &kp R     &kp T                                         &kp Y            &kp U     &kp I      &kp O     &kp P     &kp LBKT
&kp BSPC   &kp A   &kp S      &kp D     &kp F     &kp G                                         &kp H            &kp J     &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X      &kp C     &kp V     &kp B      &to 6        &to 0                 &kp N            &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp EQUAL
                   &kp LCTRL  &kp LALT  &kp LALT  &kp SPACE  &kp LCTRL    &mt LEFT_SHIFT SPACE  &lt 4 BACKSPACE  &kp BSPC  &kp BSPC   &kp BSPC
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp LEFT_ARROW RIGHT_ARROW>;
        };

        numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp N7  &kp N8  &kp N9   &kp LS(PLUS)  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp N4  &kp N5  &kp N6   &kp MINUS     &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp N1  &kp N2  &kp N3   &kp LS(STAR)  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &to 0   &trans  &kp N0  &kp N0  &kp DOT  &kp FSLH      &kp EQUAL
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
